OUTPUT A TEMPLATE (HTML, CSS, JS files)

1) Crear la carpeta de los templates (en el root, fuera de todas las carpetas al nivel de la    
   carpeta principal)
	Se sugiere que dentro de la carpeta de templates crees subcarpetas que representen a cada
	aplicación del proyecto:
		templates
			pages
				about.html
				index.html
			anotherApp
			anotherApp
	Si quieres agregar un encabezado, header, footer, cosas que se repetirán en cada página,
	puedes crear un diseño base que aplique con todos (base.html):
		templates
			pages
				about.html
				index.html
			base.html
			anotherApp
			anotherApp
		//Si observas el file base.html esta a la altura de las carpetas de cada app.
		//Dentro de base.html declaramos los 'bloques' donde se insertarán las páginas html:
			<body>
				{% block content %} {% endblock %}
			</body>
		//En cada file html usamos jinja syntax (lo usa django por default):
			{% extends 'base.html' %}
			{% block content %}
				<Aqui el contenido de cada página>
			{% endblock %}

2) Tell to Django where the look for templates:
	- In settings.py (main), busca el diccionario TEMPLATES = [].
	- Dentro del diccionario, ve al diccionario DIRS e ingresa:
		'DIRS': [os.path.join(BASE_DIR, '<folder name>')], #BASE_DIR = root directory

3) En el archivo urls.py (dentro de la carpeta de la aplicación), definimos las rutas de los 
   archivos de la carpeta de los templates: {paso 3 de 'crearApp-URLS'}.
	No olvides crear los métodos en views.py de la app de las rutas nuevas creadas por cada
	template (archivo HTML, etc.), {paso 4 de 'crearApp-URLS'}.

------------------------------------------------------------------------------------------------
PARA AÑADIR LOS ESTILOS CSS, SAS DEL CURSO:

	1) Copias la carpeta /static dentro de btre (main project).
           La pegas dentro de la carpeta de tu main project (tu btre)
	2) En settings.py (main) hasta abajo agregas:
		STATIC_ROOT= os.path.join(BASE_DIR, 'static')
		STATIC_URL = '/static/'
		STATICFILES_DIRS = [
		    os.path.join(BASE_DIR, 'btre/static')
		]
	3) Ejecutas python manage.py collectstatic.
           Se crea una carpeta llamada 'static' en el root, el cual tiene las cosas que pusimos en 
	   btre (main project folder), además se crea una carpeta admin estática.
	   Cuando haces deploy, esa es la carpeta que busca 'static' que se creó en root.
	4) Poner esa carpeta estatica nueva de estilos en gitignore:
		#added
		venv
		/static
		/media (el media que ya existía, le agregamos el / al principio).
	5) Una vez puesto todos los estilos (links href, js scripts, etc) en base.html, debes poner
	   hasta mero arriba: {% load static %} para que cargue la carpeta de static root.
	   También:
		<!-- Font Awesome -->
		<link rel="stylesheet" href="{% static 'css/all.css' %}">
			//Esto referencia en la carpeta static (que definimos en settings) tomará
			el archivo all.css de la carpeta css (static root).

------------------------------------------------------------------------------------------------
CREAR PARTIALS (HEADER, FOOTER EN DIFERENTES ARCHIVOS HTML).

	1) Dentro de la carpeta de templates, creas una carpeta llamada partials (a la altura de 
           pages, base.html)
	2) Creas dentro de esa carpeta partials, los archivos html deseados, ya con su código.
	3) En base.html, debes llamar a esos partials:
		<!-- Top bar -->
		{% include 'partials/_topbar.html' %}











	

